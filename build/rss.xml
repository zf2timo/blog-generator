<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Notes of zf2timo</title>
        <link></link>
        <description>RSS feed for Notes of zf2timo</description>
        <atom:link href="/rss.xml" rel="self" type="application/rss+xml" />
                    <item>
                <title>Zend MVC Expressive Bridge</title>
                <description><![CDATA[<p>This blog post is about promoting my zf-mvc-expressive-bridge module.</p>

<h2>Reason</h2>

<p>I was working on a private project, where I had to validate all of the User Input with the Zend\InputFilter. While
trying to figure out how to integrate the Zend PluginManager into an Expressive application, I realized it wasn't as
easy as I expected it to be. I had an idea, but that one did not work out.</p>

<p>A short chat with Matthew did help me out here:
To initialize the Plugin Manager I had to create my own Factories - as the "default" Factories are collected in the
Zend\MVC Package. Contrary to this, the PluginManager are distributed over different Packages.</p>

<p>With wanting to help out other projects facing similar problems as mine, the idea of a zf-mvc-expressive-bridge was
born.</p>

<h2>Realisation</h2>

<p>As noted above, the problem are the Factories, that are laying in the Zend\MVC Package. Of course, I could have just
installed this Package - with only using the needed Factories. This would have been the easy way.</p>

<p>But as my application is build with Zend Expressive - and not with Zend MVC - it just did not feel right to mix both of
them.</p>

<p>Because the needed Factories already exists, the zf-mvc-expressive-bridge module simply extracts the PluginManager
Factories from the Zend\MVC Package to provide them for further usage.</p>

<p>That's all - this way no unused Classes are downloaded.</p>

<h2>Lifetime</h2>

<p>In my chat with Matthew he noted, that the problem concerning the Factories is known and that it is on their to-do-list.
So it's just a matter of time when they'll come up with a solution.
When the task is done, the zf-mvc-expressive-bridge is deprecated immediately and the use should switch to Factories
provided by the Package (e.g. Zend\InputFilter).</p>

<h2>Conclusion</h2>

<p>Hopefully, the zf-mvc-expressive-bridge Package helps some of you and saves some extra work.</p>
]]></description>
                <link>/2016/03/29/zend-mvc-expressive-bridge</link>
                <pubDate>Tue, 29 Mar 2016 00:00:00 +0000</pubDate>
                <guid>/2016/03/29/zend-mvc-expressive-bridge</guid>
            </item>
            </channel>
</rss>
